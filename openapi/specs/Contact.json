{
  "openapi": "3.0.1",
  "info": {
    "title": "Contact",
    "description": "Handles all Contact information (e.g. address, phone, email, etc.)\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "contact": {
      "name": "LIS API Help Desk",
      "url": "https://help.lis.virginia.gov",
      "email": "lis@dlas.virginia.gov"
    },
    "version": "v1"
  },
  "paths": {
    "/Contact/api/heartbeat/heartbeatasync": {
      "get": {
        "tags": [
          "HeartBeat"
        ],
        "summary": "Checks service health",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/getcontactlistasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Get a list of LIS Contacts using unique identifier",
        "parameters": [
          {
            "name": "contactInformationID",
            "in": "query",
            "description": "Unique identifier for Contact Information",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ownerID",
            "in": "query",
            "description": "Unique identifier for Owner",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ownerTypeID",
            "in": "query",
            "description": "Unique identifier for Owner Type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contactTypeID",
            "in": "query",
            "description": "Unique Identifier for Contact Type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Active=1 or Inactive=0",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsPublicGetResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/getcontacttypereferencesasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a list of Contact Types",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTypeReferencesResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/getownertypereferencesasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a list of Owner Types",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerTypeReferencesResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/getcontactsbystatusasync/{status}": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a list of Contacts by status",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Active=1 or Inactive=0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsPublicGetResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/getcontactbyidasync/{contactInformationId}": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a list of Contacts by unique identifier",
        "parameters": [
          {
            "name": "contactInformationId",
            "in": "path",
            "description": "Unique identifier for Contact Information",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsPublicGetResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/getcontactsbyownerasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a list of Contacts by Owner",
        "parameters": [
          {
            "name": "ownerID",
            "in": "query",
            "description": "Unique identifier for Owner",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ownerTypeID",
            "in": "query",
            "description": "Unique identifier for Owner Type",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsPublicGetResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/getcontactsbycontacttypeidasync/{contactTypeID}": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a list of Contacts by a contact type",
        "parameters": [
          {
            "name": "contactTypeID",
            "in": "path",
            "description": "Unique identifier for Contact Type",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsPublicGetResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/clearpubliccache": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Clear all cache for this controller",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Contact/api/heartbeatasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets telemetry on service health",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HeartBeatPublicModel"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContactPublicGetResponse": {
        "type": "object",
        "properties": {
          "OwnerID": {
            "type": "integer",
            "description": "Unique identifier for Owner",
            "format": "int32"
          },
          "ContactTypeID": {
            "type": "integer",
            "description": "Unique identifier for Contact Type",
            "format": "int32",
            "nullable": true
          },
          "ContactType": {
            "maxLength": 25,
            "type": "string",
            "description": "Contact Type description",
            "nullable": true
          },
          "Address1": {
            "maxLength": 100,
            "type": "string",
            "description": "Address 1",
            "nullable": true
          },
          "Address2": {
            "maxLength": 100,
            "type": "string",
            "description": "Address 2",
            "nullable": true
          },
          "Address3": {
            "maxLength": 100,
            "type": "string",
            "description": "Address 3",
            "nullable": true
          },
          "City": {
            "maxLength": 30,
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "StateCode": {
            "maxLength": 2,
            "type": "string",
            "description": "State",
            "nullable": true
          },
          "ZipCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Postal/Zip Code",
            "nullable": true
          },
          "PhoneNumber": {
            "maxLength": 15,
            "type": "string",
            "description": "Phone Number",
            "nullable": true
          },
          "EmailAddress": {
            "maxLength": 100,
            "type": "string",
            "description": "Email Address",
            "format": "email",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "Is this active?"
          },
          "IsPublic": {
            "type": "boolean",
            "description": "Is this public?"
          },
          "ContactInformationID": {
            "type": "integer",
            "description": "Contact unique identifier",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contact Public Get Response inheriting from Contact Base Model"
      },
      "ContactsPublicGetResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Is this a successful response?"
          },
          "FailureMessage": {
            "type": "string",
            "description": "Details if this response failed",
            "nullable": true
          },
          "CacheKeyName": {
            "type": "string",
            "description": "CacheKey name",
            "nullable": true
          },
          "ListItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPublicGetResponse"
            },
            "description": "list of contacts for Public Consumption",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contacts Public Get Response"
      },
      "ContactTypeReferenceResponse": {
        "type": "object",
        "properties": {
          "ContactTypeID": {
            "type": "integer",
            "description": "Contact Type unique identifier",
            "format": "int32",
            "nullable": true
          },
          "OwnerTypeID": {
            "type": "integer",
            "description": "Owner Type Unique Identifier (Associated Object)",
            "format": "int32"
          },
          "OwnerType": {
            "maxLength": 25,
            "type": "string",
            "description": "Owner Type Name or Description",
            "nullable": true
          },
          "ContactType": {
            "maxLength": 25,
            "type": "string",
            "description": "Contact Type Name or Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object containing LIS contact type reference information. If no valid response \r\ncould be obtained, Success boolean will be false and additional information can be found \r\nin the FailureMessage string."
      },
      "ContactTypeReferencesResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Is this a successful response?"
          },
          "FailureMessage": {
            "type": "string",
            "description": "Details if this response failed",
            "nullable": true
          },
          "CacheKeyName": {
            "type": "string",
            "description": "CacheKey name",
            "nullable": true
          },
          "ListItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactTypeReferenceResponse"
            },
            "description": "list of contact references",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request and Response object containing a list of LIS contact references (using ContactReferenceResponse). If no valid response could be obtained, Success boolean will be false and additional information can be found in the FailureMessage string."
      },
      "HeartBeatPublicModel": {
        "required": [
          "ActionName",
          "DateTime",
          "Environment",
          "Service",
          "User"
        ],
        "type": "object",
        "properties": {
          "User": {
            "maxLength": 100,
            "type": "string"
          },
          "DateTime": {
            "type": "string"
          },
          "Environment": {
            "maxLength": 100,
            "type": "string"
          },
          "ActionName": {
            "maxLength": 100,
            "type": "string"
          },
          "Service": {
            "maxLength": 100,
            "type": "string"
          },
          "Success": {
            "type": "boolean"
          },
          "FailureMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OwnerTypeReferenceResponse": {
        "type": "object",
        "properties": {
          "OwnerTypeID": {
            "type": "integer",
            "description": "Owner Type unique identifier",
            "format": "int32",
            "nullable": true
          },
          "OwnerType": {
            "maxLength": 25,
            "type": "string",
            "description": "Owner Type Name or Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object containing LIS Owner Type reference information. If no valid response \r\ncould be obtained, Success boolean will be false and additional information can be found \r\nin the FailureMessage string."
      },
      "OwnerTypeReferencesResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Is this a successful response?"
          },
          "FailureMessage": {
            "type": "string",
            "description": "Details if this response failed",
            "nullable": true
          },
          "CacheKeyName": {
            "type": "string",
            "description": "CacheKey name",
            "nullable": true
          },
          "ListItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OwnerTypeReferenceResponse"
            },
            "description": "list of contact references",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request and Response object containing a list of LIS contact references (using ContactReferenceResponse). If no valid response could be obtained, Success boolean will be false and additional information can be found in the FailureMessage string."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      }
    },
    "securitySchemes": {
      "RefreshToken": {
        "type": "apiKey",
        "description": "Please enter the Refresh token",
        "name": "Authorization",
        "in": "header"
      },
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "RefreshToken": []
    },
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "HeartBeat",
      "description": "HeartBeat controller for getting telemetry on service health."
    },
    {
      "name": "PublicActions",
      "description": "Public actions Controller used for ONLY reading (not writing) data (Contains GET Verbs)"
    }
  ]
}