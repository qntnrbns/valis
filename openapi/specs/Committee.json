{
  "openapi": "3.0.1",
  "info": {
    "title": "Committee",
    "description": "Handles any Committee data\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "contact": {
      "name": "LIS API Help Desk",
      "url": "https://help.lis.virginia.gov",
      "email": "lis@dlas.virginia.gov"
    },
    "version": "v1"
  },
  "paths": {
    "/api/heartbeat/heartbeatasync": {
      "get": {
        "tags": [
          "HeartBeat"
        ],
        "summary": "Checks service health",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Committee/api/getcommitteesasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a list of Committees",
        "parameters": [
          {
            "name": "effectiveDate",
            "in": "query",
            "description": "Effective Date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "committeeNumber",
            "in": "query",
            "description": "Committee number (e.g. S12)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCommitteesResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/getcommitteelistasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a shallow list of Committees",
        "parameters": [
          {
            "name": "sessionID",
            "in": "query",
            "description": "Unique identifier for Session",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "chamberCode",
            "in": "query",
            "description": "Chamber code (H/S)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentCommitteeID",
            "in": "query",
            "description": "Unique identifier for parent Committee",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeSubCommittees",
            "in": "query",
            "description": "Should subcommittees be returned as well?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCommitteesResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/getcommitteebyidasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets a committee by unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "unique identifier for Committee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sessionID",
            "in": "query",
            "description": "unique identifier for Session",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCommitteesResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/clearpubliccache": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Clear all cache for this controller",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/heartbeatasync": {
      "get": {
        "tags": [
          "PublicActions"
        ],
        "summary": "Gets telemetry on service health",
        "parameters": [
          {
            "name": "WebAPIKey",
            "in": "header",
            "description": "Partner WebAPIKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HeartBeatPublicModel"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HeartBeatPublicModel": {
        "required": [
          "ActionName",
          "DateTime",
          "Environment",
          "Service",
          "User"
        ],
        "type": "object",
        "properties": {
          "User": {
            "maxLength": 100,
            "type": "string"
          },
          "DateTime": {
            "type": "string"
          },
          "Environment": {
            "maxLength": 100,
            "type": "string"
          },
          "ActionName": {
            "maxLength": 100,
            "type": "string"
          },
          "Service": {
            "maxLength": 100,
            "type": "string"
          },
          "Success": {
            "type": "boolean"
          },
          "FailureMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "PublicCommitteeFileResponse": {
        "type": "object",
        "properties": {
          "CommitteeID": {
            "type": "integer",
            "description": "Unique Identifier for Committee",
            "format": "int32",
            "nullable": true
          },
          "FileURL": {
            "type": "string",
            "description": "File URL",
            "format": "uri",
            "nullable": true
          },
          "TextFormatID": {
            "type": "integer",
            "description": "Unique identifier for Text Format",
            "format": "int32",
            "nullable": true
          },
          "IsGenerated": {
            "type": "boolean",
            "description": "Is this generated?",
            "nullable": true
          },
          "IsPublic": {
            "type": "boolean",
            "description": "is this public?",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "is this active?",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "type": "string",
            "description": "Link description",
            "nullable": true
          },
          "CommitteeFileID": {
            "type": "integer",
            "description": "Unique identifier for Committee File",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Information for Public Committee File"
      },
      "PublicCommitteeResponse": {
        "required": [
          "ChamberCode",
          "CommitteeNumber",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 100,
            "type": "string",
            "description": "Committee name"
          },
          "CommitteeNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "Committee number (e.g. S12)"
          },
          "ChamberCode": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "description": "Chamber code (H/S) for which committee belongs"
          },
          "SessionCode": {
            "type": "string",
            "description": "Session code (e.g. 20181)",
            "nullable": true
          },
          "TwitterHandle": {
            "maxLength": 15,
            "type": "string",
            "description": "Twitter username/handle",
            "nullable": true
          },
          "TwitterEmail": {
            "maxLength": 100,
            "type": "string",
            "description": "Twitter email address",
            "nullable": true
          },
          "ParentCommitteeID": {
            "type": "integer",
            "description": "Unique Identifier for Parent Committee",
            "format": "int32",
            "nullable": true
          },
          "ServiceEndDate": {
            "type": "string",
            "description": "End date of Service for this Committee",
            "format": "date-time",
            "nullable": true
          },
          "ServiceBeginDate": {
            "type": "string",
            "description": "Begin date of Service for this Committee",
            "format": "date-time",
            "nullable": true
          },
          "EffectiveBeginDate": {
            "type": "string",
            "description": "Effective begin date",
            "format": "date-time",
            "nullable": true
          },
          "EffectiveEndDate": {
            "type": "string",
            "description": "Effective ending date",
            "format": "date-time",
            "nullable": true
          },
          "Abbreviation": {
            "maxLength": 10,
            "type": "string",
            "description": "Committee abbreviation",
            "nullable": true
          },
          "Description": {
            "maxLength": 1000,
            "type": "string",
            "description": "Committee description",
            "nullable": true
          },
          "MeetingNote": {
            "maxLength": 1000,
            "type": "string",
            "description": "Committee meeting note",
            "nullable": true
          },
          "PendingChange": {
            "type": "boolean",
            "description": "Are there any pending changes?",
            "nullable": true
          },
          "SubPendingChange": {
            "type": "boolean",
            "description": "Are there any pending changes for Subcommittee?",
            "nullable": true
          },
          "IsPublic": {
            "type": "boolean",
            "description": "Is this public?",
            "nullable": true
          },
          "AgendaURL": {
            "type": "string",
            "description": "Agenda link for committees and subcommittees",
            "nullable": true
          },
          "CommitteeID": {
            "type": "integer",
            "description": "Unique identifier for Committee",
            "format": "int32"
          },
          "CommitteeFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicCommitteeFileResponse"
            },
            "description": "List of Committee Files",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information for public Committee"
      },
      "PublicCommitteesResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Is this a successful response?"
          },
          "FailureMessage": {
            "type": "string",
            "description": "Details if this response failed",
            "nullable": true
          },
          "CacheKeyName": {
            "type": "string",
            "description": "CacheKey name",
            "nullable": true
          },
          "ListItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicCommitteeResponse"
            },
            "description": "List of Public Committees",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "List of Public Committees"
      }
    },
    "securitySchemes": {
      "RefreshToken": {
        "type": "apiKey",
        "description": "Please enter the Refresh token",
        "name": "Authorization",
        "in": "header"
      },
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "RefreshToken": []
    },
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "HeartBeat",
      "description": "HeartBeat controller for getting telemetry on service health."
    },
    {
      "name": "PublicActions",
      "description": "Public actions Controller for reading data"
    }
  ]
}