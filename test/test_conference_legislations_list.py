# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.conference_legislations_list import ConferenceLegislationsList

class TestConferenceLegislationsList(unittest.TestCase):
    """ConferenceLegislationsList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConferenceLegislationsList:
        """Test ConferenceLegislationsList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConferenceLegislationsList`
        """
        model = ConferenceLegislationsList()
        if include_optional:
            return ConferenceLegislationsList(
                success = True,
                failure_message = '',
                cache_key_name = '',
                list_items = [
                    valis.models.conference_legislation_list.ConferenceLegislationList(
                        legislation_id = 56, 
                        legislation_number = '', 
                        full_number = '', 
                        description = '', 
                        introduction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        offered_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        chamber_code = '', 
                        legislation_type_code = '', 
                        legislation_class_id = 56, 
                        legislation_class = '', 
                        legislation_key = 56, 
                        legislation_status = '', 
                        effective_type = '', 
                        session_id = 56, 
                        session_name = '', 
                        is_prefile = True, )
                    ]
            )
        else:
            return ConferenceLegislationsList(
        )
        """

    def testConferenceLegislationsList(self):
        """Test ConferenceLegislationsList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
