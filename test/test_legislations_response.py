# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.legislations_response import LegislationsResponse

class TestLegislationsResponse(unittest.TestCase):
    """LegislationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegislationsResponse:
        """Test LegislationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegislationsResponse`
        """
        model = LegislationsResponse()
        if include_optional:
            return LegislationsResponse(
                success = True,
                failure_message = '',
                cache_key_name = '',
                list_items = [
                    valis.models.legislation_response.LegislationResponse(
                        session_id = 56, 
                        session_code = '', 
                        legislation_class_id = 56, 
                        legislation_number = '', 
                        description = '', 
                        legislation_title = '', 
                        offered_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        introduction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        chamber_code = '', 
                        legislation_type_code = '', 
                        full_number = '', 
                        legislation_status_id = 56, 
                        legislation_id = 56, 
                        legislation_key = 56, 
                        legislation_status = '', 
                        candidate_date = '', 
                        legislation_summary = '', 
                        legislation_text_id = 56, 
                        effective_type = '', 
                        effective_type_id = 56, 
                        pending_change = True, 
                        summary_version = '', 
                        session_name = '', 
                        committee_name = '', 
                        committee_id = 56, 
                        parent_committee_name = '', 
                        chapter_number = '', 
                        committee_number = '', 
                        version_date = '', 
                        document_code = '', 
                        patrons = [
                            valis.models.patron.Patron(
                                legislation_id = 56, 
                                legislation_text_id = 56, 
                                chamber_code = '', 
                                member_id = 56, 
                                member_number = '', 
                                patron_type_id = 56, 
                                name = '', 
                                display_name = '', 
                                member_display_name = '', 
                                patron_display_name = '', 
                                legislation_number = '', 
                                sequence = 56, 
                                is_introducing = True, 
                                by_request = True, )
                            ], 
                        house_passage_date = '', 
                        senate_passage_date = '', 
                        is_complete = True, 
                        sessions = [
                            valis.models.session_response.SessionResponse(
                                session_id = 56, 
                                session_code = '', 
                                is_prefile = True, )
                            ], 
                        search_text = [
                            valis.models.legislation_search_text.LegislationSearchText(
                                legislation_text_id = 56, 
                                description = '', 
                                document_code = '', 
                                count_matches = 56, )
                            ], )
                    ],
                search_criteria = ''
            )
        else:
            return LegislationsResponse(
        )
        """

    def testLegislationsResponse(self):
        """Test LegislationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
