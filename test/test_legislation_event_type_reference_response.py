# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.legislation_event_type_reference_response import LegislationEventTypeReferenceResponse

class TestLegislationEventTypeReferenceResponse(unittest.TestCase):
    """LegislationEventTypeReferenceResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegislationEventTypeReferenceResponse:
        """Test LegislationEventTypeReferenceResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegislationEventTypeReferenceResponse`
        """
        model = LegislationEventTypeReferenceResponse()
        if include_optional:
            return LegislationEventTypeReferenceResponse(
                legislation_event_type_id = 56,
                event_code = '',
                legislation_description = '',
                committee_description = '',
                calendar_description = '',
                journal_description = '',
                vote_description = '',
                legislation_chamber_code = '0',
                actor_type_id = 56,
                is_public = True,
                is_active = True,
                committee_complete = True,
                is_passed = True,
                action_references = [
                    valis.models.calendar_action_reference_response.CalendarActionReferenceResponse(
                        action_reference_id = 56, 
                        is_mandatory = True, 
                        sequence = 56, 
                        reference_text = '', 
                        calendar_action_id = 56, 
                        action_reference_type_id = 56, 
                        action_reference_type = '', )
                    ]
            )
        else:
            return LegislationEventTypeReferenceResponse(
        )
        """

    def testLegislationEventTypeReferenceResponse(self):
        """Test LegislationEventTypeReferenceResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
