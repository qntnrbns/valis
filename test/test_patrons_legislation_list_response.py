# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.patrons_legislation_list_response import PatronsLegislationListResponse

class TestPatronsLegislationListResponse(unittest.TestCase):
    """PatronsLegislationListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatronsLegislationListResponse:
        """Test PatronsLegislationListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatronsLegislationListResponse`
        """
        model = PatronsLegislationListResponse()
        if include_optional:
            return PatronsLegislationListResponse(
                success = True,
                failure_message = '',
                cache_key_name = '',
                list_items = [
                    valis.models.patron_legislation_list_response.PatronLegislationListResponse(
                        legislation_id = 56, 
                        legislation_text_id = 56, 
                        chamber_code = '', 
                        member_id = 56, 
                        member_number = '', 
                        patron_type_id = 56, 
                        name = '', 
                        display_name = '', 
                        member_display_name = '', 
                        patron_display_name = '', 
                        legislation_number = '', 
                        sequence = 56, 
                        is_introducing = True, 
                        by_request = True, 
                        legislation = [
                            valis.models.legislation.Legislation(
                                session_id = 56, 
                                session_code = '', 
                                legislation_class_id = 56, 
                                legislation_number = '', 
                                description = '', 
                                legislation_title = '', 
                                offered_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                introduction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                chamber_code = '', 
                                legislation_type_code = '', 
                                full_number = '', 
                                legislation_status_id = 56, 
                                legislation_class = '', 
                                legislation_id = 56, 
                                legislation_key = 56, 
                                legislation_status = '', 
                                effective_type = '', 
                                session_name = '', 
                                is_prefile = True, )
                            ], )
                    ]
            )
        else:
            return PatronsLegislationListResponse(
        )
        """

    def testPatronsLegislationListResponse(self):
        """Test PatronsLegislationListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
