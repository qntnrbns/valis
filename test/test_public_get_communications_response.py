# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.public_get_communications_response import PublicGetCommunicationsResponse

class TestPublicGetCommunicationsResponse(unittest.TestCase):
    """PublicGetCommunicationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublicGetCommunicationsResponse:
        """Test PublicGetCommunicationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublicGetCommunicationsResponse`
        """
        model = PublicGetCommunicationsResponse()
        if include_optional:
            return PublicGetCommunicationsResponse(
                success = True,
                failure_message = '',
                cache_key_name = '',
                list_items = [
                    valis.models.public_get_communication_response.PublicGetCommunicationResponse(
                        communication_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        communication_number = 56, 
                        reference_number = '', 
                        is_public = True, 
                        communication_type_id = 56, 
                        communication_type = '', 
                        committee_id = 56, 
                        committee_name = '', 
                        chamber_code = '0', 
                        session_id = 56, 
                        document_code = '', 
                        session_code = '', 
                        show_signature_note = True, 
                        communication_id = 56, 
                        communication_categories = [
                            valis.models.public_get_communication_category_response.PublicGetCommunicationCategoryResponse(
                                communication_id = 56, 
                                communication_category_type_id = 56, 
                                category_code = '', 
                                category_description = '', 
                                minutes_summary = '', 
                                sequence = 56, 
                                plural_description = '', 
                                description = '', 
                                communication_category_id = 56, 
                                communication_legislation = [
                                    valis.models.public_get_communication_legislation_response.PublicGetCommunicationLegislationResponse(
                                        communication_category_id = 56, 
                                        legislation_id = 56, 
                                        legislation_number = '', 
                                        legislation_key = 56, 
                                        legislation_description = '', 
                                        is_active = True, 
                                        legislation_text_id = 56, 
                                        committee_referred_name = '', 
                                        event_code = '', 
                                        document_code = '', 
                                        ld_number = '', 
                                        draft_title = '', 
                                        vote_id = 56, 
                                        vote_number = '', 
                                        suffix = '', 
                                        effective_type_id = 56, 
                                        effective_type = '', 
                                        is_candidate = True, 
                                        communication_legislation_id = 56, 
                                        patrons = [
                                            valis.models.patron_1.Patron_1(
                                                legislation_id = 56, 
                                                legislation_text_id = 56, 
                                                chamber_code = '', 
                                                member_id = 56, 
                                                member_number = '', 
                                                patron_type_id = 56, 
                                                name = '', 
                                                display_name = '', 
                                                member_display_name = '', 
                                                patron_display_name = '', 
                                                by_request = True, )
                                            ], )
                                    ], )
                            ], 
                        communication_files = [
                            valis.models.public_communication_file.PublicCommunicationFile(
                                communication_file_id = 56, 
                                communication_id = 56, 
                                file_url = '', 
                                text_format_id = 56, 
                                is_generated = True, 
                                is_public = True, 
                                is_active = True, )
                            ], )
                    ]
            )
        else:
            return PublicGetCommunicationsResponse(
        )
        """

    def testPublicGetCommunicationsResponse(self):
        """Test PublicGetCommunicationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
