# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.public_legislation_events_response import PublicLegislationEventsResponse

class TestPublicLegislationEventsResponse(unittest.TestCase):
    """PublicLegislationEventsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublicLegislationEventsResponse:
        """Test PublicLegislationEventsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublicLegislationEventsResponse`
        """
        model = PublicLegislationEventsResponse()
        if include_optional:
            return PublicLegislationEventsResponse(
                success = True,
                failure_message = '',
                cache_key_name = '',
                legislation_events = [
                    valis.models.public_legislation_event_response.PublicLegislationEventResponse(
                        legislation_event_id = 56, 
                        legislation_event_type_id = 56, 
                        event_code = '', 
                        event_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deletion_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        legislation_id = 56, 
                        vote_id = 56, 
                        effective_type = '', 
                        effective_type_id = 56, 
                        legislation_number = '', 
                        chamber_code = '', 
                        sequence = 56, 
                        session_code = '', 
                        is_public = True, 
                        is_passed = True, 
                        legislation_status_id = 56, 
                        reference_id = '', 
                        reference_number = '', 
                        reference_type_id = 56, 
                        reference_type = '', 
                        status = '', 
                        actor_id = 56, 
                        actor_type = '', 
                        event_references = [
                            valis.models.public_event_reference_response.PublicEventReferenceResponse(
                                event_reference_id = 56, 
                                reference_text = '', 
                                reference_id = 56, 
                                legislation_event_id = 56, 
                                action_reference_type_id = 56, 
                                action_reference_type = '', 
                                sequence = 56, )
                            ], )
                    ]
            )
        else:
            return PublicLegislationEventsResponse(
        )
        """

    def testPublicLegislationEventsResponse(self):
        """Test PublicLegislationEventsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
