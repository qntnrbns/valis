# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.legislations_text_get_response import LegislationsTextGetResponse

class TestLegislationsTextGetResponse(unittest.TestCase):
    """LegislationsTextGetResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegislationsTextGetResponse:
        """Test LegislationsTextGetResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegislationsTextGetResponse`
        """
        model = LegislationsTextGetResponse()
        if include_optional:
            return LegislationsTextGetResponse(
                success = True,
                failure_message = '',
                cache_key_name = '',
                list_items = [
                    valis.models.legislation_text_get_response.LegislationTextGetResponse(
                        legislation_text_id = 56, 
                        legislation_draft_id = 56, 
                        text_format = '', 
                        text_format_id = 56, 
                        legislation_version_id = 56, 
                        legislation_version = '', 
                        legislation_id = 56, 
                        legislation_number = '', 
                        chamber_code = '', 
                        legislation_chamber_code = '', 
                        session_code = '', 
                        legislation_text_action_id = 56, 
                        document_code = '', 
                        draft_text = '', 
                        draft_title = '', 
                        ld_number = '', 
                        version_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        release_to_print = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        version_code = '', 
                        event_code = '', 
                        doc_url = '', 
                        link_url = '', 
                        description = '', 
                        sponsor = '', 
                        sponsor_type_id = 56, 
                        session_year = 56, 
                        is_public = True, 
                        is_active = True, 
                        is_complete = True, 
                        is_ihod = True, 
                        governors_request = True, 
                        dls_prepared = True, 
                        consent_required = True, 
                        is_emergency = True, 
                        is_reprint = True, 
                        is_plural = True, 
                        on_reconvene = True, 
                        reference_ld_number = '', 
                        text_disposition_id = 56, 
                        text_disposition = '', 
                        reference_text_id = 56, 
                        committee_id = 56, 
                        committee_name = '', 
                        committee_number = '', 
                        pdf_file = [
                            valis.models.pdf_file.PDFFile(
                                legislation_text_id = 56, 
                                text_format_id = 56, 
                                text_format = '', 
                                file_url = '', 
                                reference_number = '', 
                                session_id = 56, 
                                description = '', 
                                page_count = 56, )
                            ], 
                        html_file = [
                            valis.models.html_file.HTMLFile(
                                legislation_text_id = 56, 
                                text_format_id = 56, 
                                text_format = '', 
                                file_url = '', 
                                reference_number = '', 
                                session_id = 56, 
                                description = '', )
                            ], 
                        impact_file = [
                            valis.models.impact_file.ImpactFile(
                                legislation_text_id = 56, 
                                text_format_id = 56, 
                                text_format = '', 
                                file_url = '', 
                                reference_number = '', 
                                session_id = 56, 
                                description = '', )
                            ], 
                        link_file = [
                            valis.models.link_file.LinkFile(
                                legislation_text_id = 56, 
                                text_format_id = 56, 
                                text_format = '', 
                                file_url = '', 
                                reference_number = '', 
                                session_id = 56, 
                                description = '', )
                            ], 
                        json_file = [
                            valis.models.json_file.JSONFile(
                                legislation_text_id = 56, 
                                text_format_id = 56, 
                                text_format = '', 
                                file_url = '', 
                                reference_number = '', 
                                session_id = 56, 
                                description = '', )
                            ], 
                        patrons = [
                            valis.models.patron_base_model.PatronBaseModel(
                                legislation_id = 56, 
                                legislation_text_id = 56, 
                                chamber_code = '', 
                                member_id = 56, 
                                member_number = '', 
                                patron_type_id = 56, 
                                name = '', 
                                display_name = '', 
                                member_display_name = '', 
                                patron_display_name = '', )
                            ], 
                        amendment_items = [
                            valis.models.amendment_item.AmendmentItem(
                                sponsor = valis.models.sponsor.Sponsor(
                                    name = '', 
                                    class_name = '', ), 
                                line = '', 
                                line_number = 56, 
                                line_class_name = '', 
                                item_order = 56, 
                                item_condition = '', 
                                amendment_changes = [
                                    valis.models.amendment_change.AmendmentChange(
                                        class_name = '', 
                                        amendment_actions = [
                                            valis.models.amendment_action.AmendmentAction(
                                                text_class_name = '', 
                                                action = '', 
                                                text = '', )
                                            ], )
                                    ], )
                            ], 
                        legislation_class_id = 56, 
                        legislation_class = '', 
                        legislation_type = '', )
                    ]
            )
        else:
            return LegislationsTextGetResponse(
        )
        """

    def testLegislationsTextGetResponse(self):
        """Test LegislationsTextGetResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
