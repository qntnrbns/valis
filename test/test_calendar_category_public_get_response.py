# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from valis.models.calendar_category_public_get_response import CalendarCategoryPublicGetResponse

class TestCalendarCategoryPublicGetResponse(unittest.TestCase):
    """CalendarCategoryPublicGetResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CalendarCategoryPublicGetResponse:
        """Test CalendarCategoryPublicGetResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CalendarCategoryPublicGetResponse`
        """
        model = CalendarCategoryPublicGetResponse()
        if include_optional:
            return CalendarCategoryPublicGetResponse(
                calendar_id = 56,
                calendar_category_type_id = 56,
                category_code = '',
                category_type = '',
                description = '',
                plural_description = '',
                sequence = 56,
                display_type = True,
                is_legislation_category = True,
                is_print = True,
                calendar_category_id = 56,
                agendas = [
                    valis.models.agenda_public_get_response.AgendaPublicGetResponse(
                        sequence = 56, 
                        calendar_category_id = 56, 
                        is_hidden = True, 
                        description = '', 
                        legislation_id = 56, 
                        legislation_key = 56, 
                        legislation_number = '', 
                        legislation_description = '', 
                        ld_number = '', 
                        summary = '', 
                        draft_title = '', 
                        is_active = True, 
                        calendar_category_template_id = 56, 
                        communication_id = 56, 
                        page_number = 56, 
                        effective_type = '', 
                        committee_id = 56, 
                        candidate_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        agenda_id = 56, 
                        patrons = [
                            valis.models.patron_partner_get_response.PatronPartnerGetResponse(
                                legislation_id = 56, 
                                legislation_text_id = 56, 
                                chamber_code = '', 
                                member_id = 56, 
                                member_number = '', 
                                patron_type_id = 56, 
                                name = '', 
                                display_name = '', 
                                member_display_name = '', 
                                patron_display_name = '', 
                                by_request = True, )
                            ], 
                        agenda_items = [
                            valis.models.agenda_item_public_get_response.AgendaItemPublicGetResponse(
                                agenda_id = 56, 
                                description = '', 
                                calendar_description = '', 
                                ld_title = '', 
                                legislation_text_id = 56, 
                                ld_number = '', 
                                draft_text = '', 
                                vote_id = 56, 
                                is_active = True, 
                                sequence = 56, 
                                legislation_event_id = 56, 
                                agenda_item_id = 56, 
                                vote_member = [
                                    valis.models.vote_member_public_get_response.VoteMemberPublicGetResponse(
                                        member_id = 56, 
                                        member_number = '', 
                                        member_display_name = '', 
                                        patron_display_name = '', 
                                        response_code = '', 
                                        vote_member_id = 56, )
                                    ], )
                            ], 
                        display_type = True, 
                        legislation_title = '', )
                    ]
            )
        else:
            return CalendarCategoryPublicGetResponse(
        )
        """

    def testCalendarCategoryPublicGetResponse(self):
        """Test CalendarCategoryPublicGetResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
